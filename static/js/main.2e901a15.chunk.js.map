{"version":3,"sources":["views/header.js","views/sorting/initialBars.js","views/buttonGroup/modal.js","views/buttonGroup/moreMenu.js","views/buttonGroup/buttonGroup.js","views/sorting/bar.js","algorithms/utils.js","algorithms/mergeSort.js","views/sorting/sortingSection.js","App.js","index.js"],"names":["Header","style","marginBottom","fontSize","color","getInitialBars","sortedBars","bars","i","array","randomValue","Math","floor","random","length","filter","bar","push","value","type","modal","display","alignItems","justifyContent","paper","backgroundColor","border","textAlign","padding","TransitionsModal","visited","localStorage","getItem","useState","open","setOpen","handleClose","setItem","Button","margin","onClick","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","flexDirection","MoreMenu","anchorEl","setAnchorEl","handleMoreClose","marginTop","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","Link","target","href","ButtonGroup","props","selectStyle","minWidth","isRunning","runState","isFinished","algorithm","setAlgorithm","speed","setSpeed","FormControl","variant","InputLabel","fontStyle","Select","onChange","console","log","label","autoWidth","marginLeft","ariant","disabled","runAlgorithm","shuffleBars","typeToColorMap","normal","correct","wrong","selected","Bar","heigth","background","height","width","marginRight","key","getHelperBars","helperBars","map","setColors","originalBars","forEach","getIndexes","changeObject","indexes","valueOfBarBefore","before","valueOfBarAfter","after","index","findIndex","newValue","mergeSortRunner","setBars","setRunState","changedBarsInOrder","test","mergeSort","unsortedArray","middle","left","slice","right","resultArray","leftIndex","rightIndex","originalList","concat","sortedList","merge","changedNodesInOrder","obj","JSON","stringify","c","setTimeout","object","newBars","visualize","speedLabelToSpeedMap","slow","medium","fast","instant","SortingSection","useEffect","initialNodes","verticalAlign","initialBars","currentAlgorithm","currentSpeed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e901a15.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <div style={{marginBottom: '2em'}}>\n      <h1 style={{fontSize: '3.5em', color: `rgb(${[250,250,250]})`}}> Sorting Visualizer </h1>\n    </div>\n  )\n}\n\nexport default Header\n","// FOR LOOP\n// UNIQUE keys for every render, otherwise resetting wont work because the hook in each node\n\n// RETURNS AND REMOVES RANDOM VALUE\nconst getRandomValue = (array) => {\n  return array[Math.floor(Math.random() * array.length)]\n}\n\nconst getInitialBars = () => {\n  var sortedBars = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n  const bars = []\n  const numOfBars = 20\n  // Initialize the nodes\n  for (let i = 0; i < numOfBars; i++) {\n    const randomValue = getRandomValue(sortedBars)\n    sortedBars = sortedBars.filter((bar) => bar !== randomValue) // Removes randomValue\n    bars.push({\n      value: randomValue,\n      type: 'normal'\n    })\n   }\n   return bars\n}\n\nexport default getInitialBars\n\n/*\nIT WORKS\nconst a = getInitialBars()\nconsole.log(a)\n*/","import React, {useState} from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { Button } from '@material-ui/core'\n\nconst modal = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}\nconst paper = {\n  backgroundColor: `rgb(${[40,40,40]})`,\n  border: `2px solid rgb(${[220,220,220]})`,\n  textAlign: 'left',\n  padding: '1em',\n}\n\nconst TransitionsModal = () => {\n\n  const visited = localStorage.getItem('visited')\n  const [open, setOpen] = useState(visited ? false : true)\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    localStorage.setItem('visited', true)\n  }\n\n  return (\n    <div>\n      <Button style={{fontSize: '0.9em', color: 'white', margin: 0 }} onClick={handleOpen}>\n        <HelpIcon style={{fontSize: '0.9em'}} />\n      </Button>\n      <Modal\n        style={modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div style={paper}>\n            <div style={{textAlign: 'center'}}>\n              <h2 > Welcome to my Pathfinding Visualizer</h2>\n            </div>\n\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <p> Grey bars&nbsp; </p>\n              <p> - normal </p>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <p style={{color: '#2d749a'}}> Blue bars&nbsp; </p>\n              <p> - selected for comparing </p>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <p style={{color: '#63C132'}}> Green bars&nbsp; </p>\n              <p> - finished </p>\n            </div>\n\n            <p> 1. Select algorithm of choice </p>\n            <p> 2. Select a different speed if you feel like it </p>\n            <p> 3. Hit play :)  </p>\n            <div style={{textAlign: 'center'}}>\n              <Button\n                style={{color: `rgb(${[20,20,20]})`, backgroundColor: `rgb(${[220,220,220]})`, fontSize: '0.9em'}}\n                onClick={handleClose}>\n                Let me play already\n              </Button>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransitionsModal","import React, { useState } from 'react'\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\nimport { Button, MenuItem, Menu, Link } from '@material-ui/core'\n\nconst MoreMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const handleMoreClose = () => { setAnchorEl(null) }\n  const handleMoreClick = (event) => { setAnchorEl(event.currentTarget) }\n\n  return (\n    <>\n      <Button style={{fontSize: '1em', color: 'white', margin: 0, marginTop: '6px'}} aria-haspopup=\"true\" onClick={handleMoreClick}>\n          <ViewHeadlineIcon style={{fontSize: '0.9em'}} />\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMoreClose}>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/pathfinding-visualizer' style={{color: 'black'}}>\n            Pathfinding Algorithms\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://github.com/martinstiles/sorting-visualizer' style={{color: 'black'}}>\n            Go to repository\n          </Link></MenuItem>\n          <MenuItem onClick={handleMoreClose}> <Link target='_blank' href='https://martinstiles.github.io/website/' style={{color: 'black'}}>\n            Visit my website\n          </Link></MenuItem>\n        </Menu>\n    </>\n  )\n}\n\nexport default MoreMenu","import React, { useState } from 'react'\nimport { Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport ShuffleIcon from '@material-ui/icons/Shuffle'\nimport TransitionModal from './modal.js'\nimport MoreMenu from './moreMenu.js'\n\nconst ButtonGroup = (props) => {\n  const style = {\n    marginBottom: '2em',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n\n  const selectStyle = {\n    backgroundColor: '#FFE19C',\n    minWidth: '12em',\n    textAlign: 'left'\n  }\n\n  // run states:\n  //const isRandom = props.runState === 'random'\n  const isRunning = props.runState === 'running'\n  const isFinished = props.runState === 'finished'\n\n  // ALGORITHM SELECT\n  const [algorithm, setAlgorithm] = useState('')\n  const handleAlgorithmChange = (event) => {\n    //props.setAlgorithm(event.target.value)\n    setAlgorithm(event.target.value)\n    console.log(event.target.value)\n  }\n\n  // SPEED SELECT\n  const [speed, setSpeed] = useState('medium')\n  const handleSpeedChange = (event) => {\n    setSpeed(event.target.value)\n    props.setSpeed(event.target.value)\n  }\n\n  // PLAY BUTTON\n  const handlePlayClick = () => {\n    props.runAlgorithm(algorithm)\n  }\n\n  return (\n    <div style={style}>\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n      <FormControl variant=\"filled\">\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Select algorithm</div>\n        </InputLabel>\n        <Select style={selectStyle} value={algorithm} onChange={handleAlgorithmChange} label=\"Algorithm\" autoWidth={true}>\n          <MenuItem value={'mergeSort'}>Merge sort</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl variant=\"filled\" style={{marginLeft: '2em'}}>\n        <InputLabel>\n          <div style={{color: 'black', fontStyle: 'italic'}}>Speed</div>\n        </InputLabel>\n        <Select style={selectStyle} value={speed} onChange={handleSpeedChange} label=\"Speed\" autoWidth={true}>\n          <MenuItem value={'slow'}>Slow</MenuItem>\n          <MenuItem value={'medium'}>Medium</MenuItem>\n          <MenuItem value={'fast'}>Fast</MenuItem>\n          <MenuItem value={'instant'}>Instant</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        style={{marginLeft: '2em', color: 'black', backgroundColor: algorithm === '' || isRunning || isFinished ? 'gray' : '#63C132'}} \n        ariant=\"contained\"\n        disabled={algorithm === '' || isFinished}\n        onClick={handlePlayClick}\n      >\n        <PlayArrowIcon />\n      </Button>\n      <Button\n        style={{marginLeft: '1em', color: 'black', backgroundColor: isRunning ? 'gray' : '#cf2e2e'}}\n        variant=\"contained\"\n        disabled={isRunning}\n        onClick={props.shuffleBars}\n      >\n        <ShuffleIcon />\n      </Button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', fontSize: '2.65em'}}>\n        <TransitionModal />\n        <MoreMenu />\n      </div>\n    </div>\n  )\n}\n\n\n//<MenuItem value={'aStar'}>A*</MenuItem>\n//<MenuItem value={'bestFist'}>Best first (greedy)</MenuItem>\n//<MenuItem value={'breadthFirst'}>Breadth First</MenuItem>\n\nexport default ButtonGroup","import React, { useState } from 'react'\n\nconst typeToColorMap = {\n  normal: `rgb(${[220,220,220]})`,\n  correct: '#63C132',\n  wrong: '#cf2e2e',\n  selected: '#2d749a'\n}\n\nconst Bar = (props) => {\n  // NØDVENDIG? Mulig vi kan droppe denne og bare bruke props.type direkte\n  //const [type, setType] = useState(props.type)\n  const type = props.type || 'normal'\n  const heigth = props.heigth || 10\n  const style = {\n    background: typeToColorMap[type],\n    height: `${heigth*1.5}em`,\n    width: '2em',\n    marginRight: '1em',\n  }\n\n  return (\n    <div key={props.key} style={style} />\n  )\n}\n\nexport default Bar","export const visualize = (originalBars, changedNodesInOrder, setBars, speed, setRunState) =>  {\n  // remove places where algorithm will stand still (no change)\n  changedNodesInOrder = changedNodesInOrder.filter(obj => JSON.stringify(obj.before) !== JSON.stringify(obj.after))\n  var c = 1\n\n  // maps through all objects and updates bars in UI accordingly\n  changedNodesInOrder.map(changeObject => {\n    setTimeout(() => {\n      const indexes = getIndexes(originalBars, changeObject)\n      setColors(originalBars, \"normal\")\n\n      indexes.map(object => {\n        const index = object.index\n        const newValue = object.newValue\n        originalBars[index].value = newValue\n        originalBars[index].type = \"selected\"\n      })\n      \n      const newBars = getHelperBars(originalBars) // have to make a new object to force component to update on hook call (?)\n      setBars(newBars)\n    }, c*speed)\n    c++\n  })\n  setTimeout(() => {\n    setRunState('finished')\n    setColors(originalBars, \"correct\")\n    const newBars = getHelperBars(originalBars) // have to make a new object to force component to update on hook call (?)\n    setBars(newBars)\n  }, (c-1)*speed)\n}\n\nexport const getHelperBars = (bars) => {\n  const helperBars = []\n  bars.map((bar) => {\n    helperBars.push({\n      value: bar.value,\n      type: bar.type\n    })\n  })\n  return helperBars\n}\n\nconst setColors = (originalBars, color) => {\n  originalBars.forEach(bar => {\n    bar.type = color\n  })\n}\n\nconst getIndexes = (originalBars, changeObject) => {\n  const indexes = []\n  for (let i = 0; i < changeObject.before.length; i++) {\n    const valueOfBarBefore = changeObject.before[i].value\n    const valueOfBarAfter = changeObject.after[i].value\n    const index = originalBars.findIndex(bar => bar.value === valueOfBarBefore)\n    indexes.push({\n      index,\n      newValue: valueOfBarAfter\n    })\n  }\n  return indexes\n}\n","\nimport { getHelperBars, visualize } from './utils'\n\nfunction merge (left, right, changedBarsInOrder) {\n  let resultArray = [], leftIndex = 0, rightIndex = 0\n\n  while (leftIndex < left.length && rightIndex < right.length) {\n    if (left[leftIndex].value <= right[rightIndex].value) {\n      resultArray.push(left[leftIndex])\n      leftIndex++\n    } else {\n      resultArray.push(right[rightIndex])\n      rightIndex++\n    }\n  }\n\n  const originalList = left.concat(right)\n  const sortedList = resultArray\n    .concat(left.slice(leftIndex))\n    .concat(right.slice(rightIndex))\n\n  changedBarsInOrder.push({\n    before: originalList,\n    after: sortedList\n  })\n  \n  return sortedList\n}\n\nfunction mergeSort (unsortedArray, changedBarsInOrder) {\n  if (unsortedArray.length <= 1) {\n    return unsortedArray\n  }\n\n  const middle = Math.floor(unsortedArray.length / 2)\n  const left = unsortedArray.slice(0, middle)\n  const right = unsortedArray.slice(middle)\n\n  return merge(\n    mergeSort(left, changedBarsInOrder), mergeSort(right, changedBarsInOrder), changedBarsInOrder\n  )\n}\n\nexport const mergeSortRunner = (bars, setBars, speed, setRunState) => {\n  const helperBars = getHelperBars(bars)\n\n  var changedBarsInOrder = []\n  const test = mergeSort(helperBars, changedBarsInOrder) // fills changedBarsInOrder\n  visualize(bars, changedBarsInOrder, setBars, speed, setRunState)\n  return test\n}\n","import React, { useState, useEffect } from 'react'\nimport getInitialBars from './initialBars'\nimport ButtonGroup from '../buttonGroup/buttonGroup'\nimport Bar from './bar'\nimport { mergeSortRunner } from '../../algorithms/mergeSort'\n\nconst speedLabelToSpeedMap = {\n  slow: 500,\n  medium: 250,\n  fast: 100,\n  instant: 0\n}\n\nvar key = 0\n\nconst SortingSection = () => {\n  const [bars, setBars] = useState([])\n  const [runState, setRunState] = useState('random') // random -> running -> finished\n  const [speed, setSpeed] = useState('medium')\n  const [numIterations, setNumItertions] = useState(0)\n  // componentDidMount\n  useEffect(() => {\n    const initialNodes = getInitialBars()\n    setBars(initialNodes)\n  }, [])\n\n  const shuffleBars = () => {\n    const initialBars = getInitialBars()\n    setBars(initialBars)\n    setRunState('random')\n  }\n\n  const runAlgorithm = (currentAlgorithm) => {\n    setRunState('running') // SJEKK AT DENNE DISABLER KNAPPER\n    const currentSpeed = speedLabelToSpeedMap[speed]\n    if (currentAlgorithm === 'mergeSort') {\n      console.log('NÅ SKAL MERGE SORT KJØRE')\n      //setBars(mergeSort(bars, speed, 1))\n      mergeSortRunner(bars, setBars, currentSpeed, setRunState)\n    }\n    setRunState('finished') // DENNE MÅ FLYTTES TIL VISUALISERING\n  }\n\n\n  return (\n    <div style={{verticalAlign: 'bottom'}}>\n      <ButtonGroup shuffleBars={shuffleBars} runAlgorithm={runAlgorithm} setSpeed={setSpeed} runState={runState} />\n      <div style={{display: 'flex', flexDirection: 'row', marginTop: '2em', verticalAlign: 'bottom', alignItems: 'bottom'}}>\n        {bars.map((bar) =>\n          <Bar key={key++} type={bar.type} heigth={bar.value} />\n        )}\n      </div>\n      {/*<h1> Number of merges: {numIterations || '--'} </h1>*/}\n    </div>\n  )\n}\n\nexport default SortingSection","import React from 'react'\nimport Header from './views/header.js'\nimport SortingSection from './views/sorting/sortingSection'\n\nfunction App() {\n  const style = {\n    //textAlign: 'center',\n    display: 'table',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n  return (\n    <div style={style}>\n      <Header />\n      <SortingSection />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}